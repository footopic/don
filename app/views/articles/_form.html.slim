= simple_form_for(@article) do |f|
  - if defined? @templates
    .dropdown
      button.btn.btn-default.dropdown-toggle[type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"]
        | Template
        span.caret
      ul#templates-dropdown-list.dropdown-menu
        - @templates.each do |template|
          li.template-item[data-name=template.name data-title=template.title_vr data-text=template.text_vr data-tags=template.tags_vr.join(',')]
            a[href='#']
              = template.name
        li
          = link_to new_template_path do
            = fa_icon :plus
            | テンプレート追加
  .field
    = f.input :title, class: 'form-control', input_html: { placeholder: 'タイトル' }
  .field
    = f.input :tag_list, class: 'form-control', input_html: {value: @article.tags.join(','), placeholder: ',区切りでタグを入力' }
  .field
    = f.input :text, class: 'form-control'
  hr
  .row
    .col-sm-2
      a#upload-btn.btn.btn-default
        = fa_icon 'file-image-o'
      input#async-image-data.hide[type="file" name="article[image]"]
    .col-sm-2
      = f.input :notice, label: 'Slackへ通知'
    .col-sm-4
      = f.input :status, label: false
    .col-sm-4
      = f.submit id: 'btn-submit', class: 'form-control'

coffee:
  # タイトルプレビュー反映
  update_title_preview = ->
    $("#title-preview").html(marked($("#article_title").val()))

  # 本文プレビュー反映
  update_text_preview = ->
    marked_text = marked($("#article_text").val())
    $("#text-preview-area").html(marked_text)

  update_tags_preview = ->
    $('#tags-preview').empty()
    tags = $('#article_tag_list').val().split(',')
    $.each tags, (i, v) ->
      return if v == ''
      $('#tags-preview').append($('<li/>').append($('<span/>').text(v)))

  # 全プレビュー反映
  update_preview = ->
    update_title_preview()
    update_text_preview()
    update_tags_preview()

  # 画像マークダウンの挿入
  insertImgMd = (url) ->
    target = $('#article_text')
    img_md = "![#{url}](#{url})\n"
    insertAtCaret(target, img_md)
    update_text_preview()

  # ターゲット要素のカーソル位置にテキストを挿入
  insertAtCaret = (target, str) ->
    target.focus()
    if navigator.userAgent.match(/MSIE/)
      r = document.selection.createRange()
      r.text = str
      r.select()
    else
      s = target.val()
      p = target.get(0).selectionStart
      np = p + str.length
      target.val(s.substr(0, p) + str + s.substr(p))
      target.get(0).setSelectionRange(np, np)

  $ ->
    # ページ読み込み時にプレビュー反映
    update_preview()

    # 変更イベント
    $("#article_title").keyup update_title_preview
    $("#article_text").keyup update_text_preview
    $("#article_tag_list").keyup update_tags_preview

    $('#upload-btn').click ->
      $('#async-image-data')[0].click()
      return false

    # 画像アップロードボタン
    $('#async-image-data').change ->
      if $(@).files < 1
        return
      file = $(this)[0].files[0]
      if file.clientHeight > 2000 or file.clientWidth > 2000
        alert '画像アップロードでエラーが発生しました 画像サイズが大きいです'
        return

      fd = new FormData()
      fd.append('name', 'jquery test')
      fd.append('file', file)

      $.ajax
        url: '/api/v1/images/upload'
        method: "POST"
        data: fd
        processData: false
        contentType: false
        success: (json) ->
          url = json.file.url
          insertImgMd('http://' + window.location.host + url)
        error: (json) ->
          alert '画像アップロードでエラーが発生しました'
      $('#async-image-data').val('')

  # テンプレートのクリック
  $('#templates-dropdown-list li').click ->
    $('#article_title').val($(this).data('title'))
    $('#article_text').val($(this).data('text'))
    $('#article_tag_list').val($(this).data('tags'))
    update_preview()
