= simple_form_for(@template) do |f|
  .field
    = f.input :name, label: 'テンプレート名', input_html: { class: 'form-control' }
  .field
    = f.input :title, label: 'タイトル', input_html: { class: 'form-control', placeholder: 'タイトル' }
  .field
    = f.input :tag_list, input_html: { value: @template.tag_list.join(','), class: 'form-control', placeholder: ',区切りでタグを入力' }
  .field
    = f.input :text, class: 'form-control', html: { class: 'comp-text' }
  .field
    = f.input :type, as: :hidden, input_html: { value: 'Template' }
  hr
  .row
    .col-sm-4
      a#upload-btn.btn.btn-default
        = fa_icon 'file-image-o'
      input#async-image-data.hide[type="file" name="template[image]"]
    .col-sm-4
      = f.button :submit, id: 'btn-submit', class: 'form-control'

coffee:
  # タイトルプレビュー反映
  update_title_preview = ->
    $("#title-preview").html(marked($("#template_title").val()))

  # 本文プレビュー反映
  update_text_preview = ->
    marked_text = marked($("#template_text").val())
    $("#text-preview-area").html(marked_text)
    emojify.run($("#text-preview-area").get(0))

  update_tags_preview = ->
    $('#tags-preview').empty()
    $.each $('#template_tag_list').val().split(','), (i, v) ->
      return if v == ''
      $('#tags-preview').append($('<li/>').append($('<span/>').text(v)))

  # 全プレビュー反映
  update_preview = ->
    update_title_preview()
    update_text_preview()
    update_tags_preview()

  # 画像マークダウンの挿入
  insertImgMd = (url) ->
    target = $('#template_text')
    img_md = "![#{url}](#{url})\n"
    insertAtCaret(target, img_md)
    update_text_preview()

  # ターゲット要素のカーソル位置にテキストを挿入
  insertAtCaret = (target, str) ->
    target.focus()
    if navigator.userAgent.match(/MSIE/)
      r = document.selection.createRange()
      r.text = str
      r.select()
    else
      s = target.val()
      p = target.get(0).selectionStart
      np = p + str.length
      target.val(s.substr(0, p) + str + s.substr(p))
      target.get(0).setSelectionRange(np, np)

  $ ->
    # ページ読み込み時にプレビュー反映
    update_preview()

    # 変更イベント
    $("#template_title").keyup update_title_preview
    $("#template_text").keyup update_text_preview
    $("#template_tag_list").keyup update_tags_preview

    $('#upload-btn').click ->
      $('#async-image-data')[0].click()
      return false


    # 画像アップロードボタン
    $('#async-image-data').change ->
      if $(@).files < 1
        return
      file = $(this)[0].files[0]
      if file.clientHeight > 2000 or file.clientWidth > 2000
        alert '画像アップロードでエラーが発生しました 画像サイズが大きいです'
        return

      fd = new FormData()
      fd.append('name', 'jquery test')
      fd.append('file', file)

      $.ajax
        url: '/api/v1/images/upload'
        method: "POST"
        data: fd
        processData: false
        contentType: false
        success: (json) ->
          url = json.file.url
          console.log 'http://' + window.location.host + url
          insertImgMd('http://' + window.location.host + url)
        error: (json) ->
          alert '画像アップロードでエラーが発生しました'
      $('#async-image-data').val('')
